source scriptConfig;

#ustawienia specyficzne dla problemu
mD=$(cut -f1 fileStartArguments | head -n ${1} | tail -1);
minPoint=$(cut -f2 fileStartArguments | head -n ${1} | tail -1);
maxPoint=$(cut -f3 fileStartArguments | head -n ${1} | tail -1);
additionalIndex=$(cut -f4 fileStartArguments | head -n ${1} | tail -1);
N=${2};
filterText=HCHTT${N}_;

#standardowa pętla
#qstat -u mb1991 > ${fileRunningJobsName};
squeue -u mb1991 -o "%i %P %j %T %M %l %D %R" > ${fileRunningJobsName};

if [ "$(cat ${fileRunningJobsName} | head -n 1 | tail -1)" == "JOBID PARTITION NAME STATE TIME TIME_LIMIT NODES NODELIST(REASON)" ]; then
  echo "Job list downloaded successfully. Starting reanimation...";
  rm ${fileDirectoriesName} ${filePointsName}; 

  cat ${fileRunningJobsName} | grep " ${filterText}G${G}C${additionalIndex}" > joby; #uwaga - dostosować filtrację!
  liczbaJobow=$(cat joby | wc -l); 
  if [ ${liczbaJobow} -lt $((${maxDirectory}-${minDirectory}+1)) ]; then  
    for ((j=${minDirectory};j<=${maxDirectory};j++)); do
      liczbaJobowSpecificDir=$(cat joby | grep B${j}P | wc -l);
      if [ ${liczbaJobowSpecificDir} -eq 0 ]; then
        if [ ${G} = 1 ]; then
          PRESSURE=$(cut -f5 startArguments.txt | head -n $((${additionalIndex} + 1)) | tail -1);
        else
          PRESSURE=$(cut -f5 startArguments.txt | head -n $(($(wc -l startArguments.txt | cut -f1 -d' ') - ${additionalIndex})) | tail -1);
        fi;
        errorFiles=$(ls 2D_N-${N}_gaps-${gaps}_G-${G}_badanie-${j}_mN-${mN}_mD-${mD}_p-${PRESSURE} | grep _Results.txt.err | wc -l);
        p=$(($(ls 2D_N-${N}_gaps-${gaps}_G-${G}_badanie-${j}_mN-${mN}_mD-${mD}_p-${PRESSURE} | grep _Results | wc -l)+${minPoint}-1-${startPreviousIteration}-${errorFiles})); 
        if [ ${p} -lt $((${maxPoint}-1-${startPreviousIteration})) ]; then
          echo ${p} >> ${filePointsName};
          echo ${j} >> ${fileDirectoriesName};
        fi; 
      fi
    done;
  fi; 
  rm joby;

  ./reanimationSequence ${filterText} ${1} ${N};
else echo "Couldn't download job list. Aborting reanimation...";
fi;

rm ${fileRunningJobsName};
