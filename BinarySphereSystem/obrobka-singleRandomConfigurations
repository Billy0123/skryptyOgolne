#!/bin/bash
#SBATCH --job-name=BDSobrobka
#SBATCH -p standard
#SBATCH --time=1-00:00:00
#SBATCH --no-requeue
#SBATCH --output=OUT-obrobka.txt
#SBATCH --error=ERR-obrobka.txt

#skrypt wymaga: resultMerger.jar w katalogu wywolania, oraz istnienia katalogu 'merged' (lub inna nazwa) oraz w nim: program + config.txt (odpowiednio ustawiony) [+startArguments.txt] oraz filterCopy.jar + FilterConfig.txt

cd $SLURM_SUBMIT_DIR;
source scriptConfig;

beta=$1;
deltaDiaIndex=$2; 
filterText=Q${beta}D${deltaDiaIndex}_

if [ ${deltaDiaIndex} -eq 0 ]; then deltaDiameter=5.000E-02;
elif [ ${deltaDiaIndex} -eq 1 ]; then deltaDiameter=4.000E-02;
elif [ ${deltaDiaIndex} -eq 2 ]; then deltaDiameter=3.000E-02;
elif [ ${deltaDiaIndex} -eq 3 ]; then deltaDiameter=2.000E-02;
elif [ ${deltaDiaIndex} -eq 4 ]; then deltaDiameter=1.000E-02;
else deltaDiameter=1.000E-03; fi;

mkdir ${newDirectoryName};
startArgumentsLength=$(wc -l startArguments.txt | cut -f1 -d' ');
for ((i=${minDirectory};i<=${maxDirectory};i++)); do
  mkdir ${newDirectoryName}/3D_N-${N}_gaps-${gaps}_G-${G}_badanie-${i}_D-${deltaDiameter}_inM-${initMode}_a-${alpha}_b-${beta};
  for ((k=$((${maxJobID}-1));k>=1;k--)); do
    for ((j=1;j<=${startArgumentsLength};j++)); do
      PRESSURE=$(cut -f2 startArguments.txt | head -n ${j} | tail -1);
      cat 3D_N-${N}_gaps-${gaps}_G-${G}_badanie-${i}_D-${deltaDiameter}_inM-${initMode}_a-${alpha}_b-${beta}/j-${k}_Configurations_arg-${PRESSURE}_Results.txt >> ${newDirectoryName}/3D_N-${N}_gaps-${gaps}_G-${G}_badanie-${i}_D-${deltaDiameter}_inM-${initMode}_a-${alpha}_b-${beta}/j-none_Configurations_arg-${PRESSURE}_Results.txt;
    done;
  done;
done;

cd ${newDirectoryName};
for ((i=${minDirectory};i<=${maxDirectory};i++)); do
  time srun ./program 5 none ${linesToSkip} ${N} ${gaps} ${deltaDiameter} ${initMode} ${G} ${startPointNumber} $((${maxPoint}-${startPointNumber})) ${i} ${alpha} ${beta};
done;
time srun java -jar filterCopy.jar;


exit 0
