source scriptConfig;
mkdir -p output;
filterText=${1};

jobID=$(cat ${fileJobIDName} | head -n ${2} | tail -1);
directory=$(cat ${fileDirectoriesName} | head -n ${2} | tail -1);
point=$(cat ${filePointsName} | head -n ${2} | tail -1);

initMode=${5};
coefSet=${6};  #1-a1b1,2-a10b100,3-a100b10000,...

if [ ${initMode} -gt 0 -a ${initMode} -le 2 ]; then N=168;
elif [ ${initMode} -gt 2 -a ${initMode} -le 4 ]; then N=196;
elif [ ${initMode} -gt 4 -a ${initMode} -le 6 ]; then N=192;
else N=56; fi;

LANG=C; #%.3E w printf'ie bedzie uzywal kropki a nie (jak domyslnie w bashu) przecinka
alpha=$(printf "%.3E" $((10**coefSet)));
beta=$(printf "%.3E" $((10**(coefSet*2))));

if [ ${jobID} -gt $((1+${startPreviousIteration})) ]; then
  if [ ${jobID} -ge ${maxJobID} ]; then
    jobID=${maxJobID};
    echo -ne "\r\e[94mStarting \e[32m${2}\e[94m/${3}: N-\e[31m${N}\e[94m, gaps-\e[31m${gaps}\e[94m, D-\e[31m${deltaDiameter}\e[94m, inM-\e[31m${initMode}\e[94m, alpha-\e[31m${alpha}\e[94m, beta-\e[31m${beta}\e[94m, G-\e[31m${G}\e[94m, jobID-\e[31mnone(start)\e[94m, B-\e[31m${directory}\e[94m, P-\e[31m${point}\e[94m, R-\e[31m$((${jobID} - 1))\e[0m        ";
    if [ ${queueSystem} = 0 ]; then
      sbatch --job-name=${filterText}B${directory}P${point}R$((${jobID} - 1)) --output=output/OUT_BDS${N}_gaps-${gaps}_D-${deltaDiameter}_inM-${initMode}_G-${G}_B-${directory}_P-${point}_R-$((${jobID} - 1))_a-${alpha}_b-${beta}_%j.txt --error=output/ERR_BDS${N}_gaps-${gaps}_D-${deltaDiameter}_inM-${initMode}_G-${G}_B-${directory}_P-${point}_R-$((${jobID} - 1))_a-${alpha}_b-${beta}_%j.txt sbatchTMPRecursionStartNormalToOnePoint ${N} ${gaps} ${deltaDiameter} ${initMode} ${G} ${directory} ${point} $((${jobID} - 1)) 1 ${filterText} ${4} ${alpha} ${beta};
    else
      qsub -N ${filterText}B${directory}P${point}R$((${jobID} - 1)) -v VAR1=${N},VAR2=${gaps},VAR3=${deltaDiameter},VAR4=${initMode},VAR5=${G},VAR6=${directory},VAR7=${point},VAR8=$((${jobID} - 1)),VAR9=1,filterText=${filterText},VAR10=${4},VAR11=${alpha},VAR12=${beta} qsubTMPRecursionStartNormalToOnePoint;
    fi
  else
    echo -ne "\r\e[94mReanimating \e[32m${2}\e[94m/${3}: N-\e[31m${N}\e[94m, gaps-\e[31m${gaps}\e[94m, D-\e[31m${deltaDiameter}\e[94m, inM-\e[31m${initMode}\e[94m, alpha-\e[31m${alpha}\e[94m, beta-\e[31m${beta}\e[94m, G-\e[31m${G}\e[94m, jobID-\e[31m${jobID}\e[94m, B-\e[31m${directory}\e[94m, P-\e[31m${point}\e[94m, R-\e[31m$((${jobID} - 1))\e[0m        ";
    if [ ${queueSystem} = 0 ]; then
      sbatch --job-name=${filterText}B${directory}P${point}R$((${jobID} - 1)) --output=output/OUT_BDS${N}_gaps-${gaps}_D-${deltaDiameter}_inM-${initMode}_G-${G}_B-${directory}_P-${point}_R-$((${jobID} - 1))_a-${alpha}_b-${beta}_%j.txt --error=output/ERR_BDS${N}_gaps-${gaps}_D-${deltaDiameter}_inM-${initMode}_G-${G}_B-${directory}_P-${point}_R-$((${jobID} - 1))_a-${alpha}_b-${beta}_%j.txt sbatchTMPRecursionOnePoint ${jobID} ${N} ${gaps} ${deltaDiameter} ${initMode} ${G} ${point} ${directory} $((${jobID} - 1)) ${filterText} ${alpha} ${beta};
    else
      qsub -N ${filterText}B${directory}P${point}R$((${jobID} - 1)) -v VAR1=${jobID},VAR2=${N},VAR3=${gaps},VAR4=${deltaDiameter},VAR5=${initMode},VAR6=${G},VAR7=${point},VAR8=${directory},VAR9=$((${jobID} - 1)),filterText=${filterText},VAR10=${alpha},VAR11=${beta} qsubTMPRecursionOnePoint;
    fi
  fi
else
  echo -ne "\r\e[94mReanimation \e[32m${2}\e[94m/${3}: job completed\e[0m                                   ";
fi
